provider "aws" {
  region = "us-east-2"
}

resource "aws_instance" "instance" {
  ami = "ami-02bf8ce06a8ed6092"
  instance_type = "t2.micro"
  subnet_id = aws_subnet.default.id
}
---------------------------------------------------------------------------
A-2
--> terraform destroy

provider "aws" {
  region = "us-east-2"
}

resource "aws_instance" "instance_new" {
  ami = "ami-02bf8ce06a8ed6092"
  instance_type = "t2.micro"
  subnet_id = aws_subnet.default.id
}

resource "aws_eip" "instance_new_eip" {
  instance = aws_instance.instance_new.id
}
---------------------------------------------------------------------
A-3
--> terraform destroy

provider "aws" {
  region = "us-east-2"
}

resource "aws_instance" "ohio" {
  instance_type = "t2.micro"
  ami = "ami-02bf8ce06a8ed6092"
  tags = {
    Name = "hello-ohio"
  }
}

provider "aws" {
  region = "us-east-1" 
}

resource "aws_instance" "n.verginia" {
  instance_type = "t2.micro"
  ami = "ami-0bb84b8ffd87024d8"
  tags = {
    Name = "hello_vergenia"
  }
}
--------------------------------------------------------------------------
A-4

provider "aws" {
  region = "us-east-1"
}

resource "aws_vpc" "my_vpc" {
  cidr_block = "10.0.0.0/16"
}

resource "aws_subnet" "my_subnet" {
  vpc_id     = aws_vpc.my_vpc.id
  cidr_block = "10.0.1.0/24"
}

resource "aws_internet_gateway" "my_igw" {
  vpc_id = aws_vpc.my_vpc.id
}

resource "aws_internet_gateway_attachment" "my_igw_attachment" {
  vpc_id             = aws_vpc.my_vpc.id
  internet_gateway_id = aws_internet_gateway.my_igw.id
}

resource "aws_route_table" "my_route_table" {
  vpc_id = aws_vpc.my_vpc.id

  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_internet_gateway.my_igw.id
  }
}

resource "aws_route_table_association" "my_subnet_association" {
  subnet_id      = aws_subnet.my_subnet.id
  route_table_id = aws_route_table.my_route_table.id
}

resource "aws_instance" "instance" {
  ami           = "ami-0bb84b8ffd87024d8"
  instance_type = "t2.micro"
  subnet_id     = aws_subnet.my_subnet.id
}
----------------------------------------------------------------------------
A-5
provider "aws" {
  region = "us-east-1"
}

resource "aws_instance" "instance" {
  ami           = "ami-0bb84b8ffd87024d8"
  instance_type = "t2.micro"
  
  user_data = <<-EOF
    #!/bin/bash
    apt-get update -y
    apt-get install apache2 -y
    echo \$(hostname -I | cut -d' ' -f1) > /tmp/ip_address.txt
  EOF
}

output "instance_ip" {
  value = aws_instance.instance.public_ip
}

---------------------------------------------------------------------------

provider "aws" {
  region = "your_aws_region"
}

resource "aws_vpc" "my_vpc" {
  cidr_block = "10.0.0.0/16"
}

resource "aws_internet_gateway" "my_igw" {
  vpc_id = aws_vpc.my_vpc.id
}

resource "aws_subnet" "subnet1" {
  vpc_id     = aws_vpc.my_vpc.id
  cidr_block = "10.0.1.0/24"
}

resource "aws_subnet" "subnet2" {
  vpc_id     = aws_vpc.my_vpc.id
  cidr_block = "10.0.2.0/24"
}

resource "aws_security_group" "my_security_group" {
  vpc_id = aws_vpc.my_vpc.id

  ingress {
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }
}

resource "aws_network_interface" "nic1" {
  subnet_id       = aws_subnet.subnet1.id
  security_groups = [aws_security_group.my_security_group.id]
}

resource "aws_network_interface" "nic2" {
  subnet_id       = aws_subnet.subnet2.id
  security_groups = [aws_security_group.my_security_group.id]
}

resource "aws_instance" "instance1" {
  ami           = "ami-xxxxxxxxxxxxxx"
  instance_type = "t2.micro"
  subnet_id     = aws_subnet.subnet1.id

  network_interface {
    network_interface_id = aws_network_interface.nic1.id
    device_index         = 0
  }
}

resource "aws_instance" "instance2" {
  ami           = "ami-xxxxxxxxxxxxxx"
  instance_type = "t2.micro"
  subnet_id     = aws_subnet.subnet2.id

  network_interface {
    network_interface_id = aws_network_interface.nic2.id
    device_index         = 0
  }
}

resource "aws_vpc_attachment" "my_igw_attachment" {
  vpc_id             = aws_vpc.my_vpc.id
  internet_gateway_id = aws_internet_gateway.my_igw.id
}
